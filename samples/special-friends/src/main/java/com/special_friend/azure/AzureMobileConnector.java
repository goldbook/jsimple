package main.java.com.special_friend.azure;

import jsimple.io.IOUtils;
import jsimple.net.HttpRequest;
import jsimple.net.HttpResponse;
import jsimple.util.BasicException;
import main.java.com.special_friend.util.Constants;

/**
 * Azure mobile connector class , Dispatches request to the azure mobile server
 */
public class AzureMobileConnector {

    /**
     * Persists a pre-formated json in the azure-mobile database
     * @param table table you want to write to
     * @param json  preformated insert data
     */
    public void saveData(String table, String json) {
        HttpRequest req = HttpRequest.create(Constants.AZURE_DB_PATH + table);
        req.setMethod(HttpRequest.METHOD_POST);
        req.setContentTypeAndAcceptHeaders("application/json", "application/json");
        req.setHeader("X-ZUMO-APPLICATION", Constants.AZURE_APP_ID);

        jsimple.io.Utf8OutputStreamWriter out = new jsimple.io.Utf8OutputStreamWriter(req.createRequestBodyStream());

        out.write(json);
        out.flush();
        out.close();

        HttpResponse resp = req.send();
        if (resp.getStatusCode() != 201) {
            throw new BasicException(resp.getStatusMessage());
        }
    }

    /**
     * Deletes data from azure-mobile db , with a specified id (primary key)
     *
     * @param table the table you want to perform the operation on
     * @param id    the unique identifier , auto-generated by azure-mobile service at insert stage
     */
    public void deleteData(String table, String id) {
        HttpRequest req = HttpRequest.create(Constants.AZURE_DB_PATH + table + "/" + id);
        req.setMethod(HttpRequest.METHOD_DELETE);

        req.setContentTypeAndAcceptHeaders("application/json", "application/json");
        req.setHeader("X-ZUMO-APPLICATION", Constants.AZURE_APP_ID);

        jsimple.io.Utf8OutputStreamWriter out = new jsimple.io.Utf8OutputStreamWriter(req.createRequestBodyStream());


        out.flush();
        out.close();
        HttpResponse resp = req.send();
        if (resp.getStatusCode() != 204) {
            throw new BasicException(resp.getStatusMessage());
        }
    }

    /**
     * Select * from Friend where myid= app.myid Query the friend table name specified as a parameter and extract all
     * the friends that this user has added.
     */
    public String selectFriends(String tableName,String applicationUserId) {
        String requestString = Constants.AZURE_DB_PATH + tableName;
        //this application shares same schema and table for all users
        //extract only the friends the current app user has added
        String filterString = "?$filter=(" + Constants.MY_ID_COLUMN + "%20eq%20" + "'" + applicationUserId + "')";
        requestString += filterString;

        HttpRequest req = HttpRequest.create(requestString);
        req.setMethod(HttpRequest.METHOD_GET);
        req.setContentTypeAndAcceptHeaders("application/json", "application/json");
        req.setHeader("X-ZUMO-APPLICATION", Constants.AZURE_APP_ID);

        HttpResponse response = req.send();
        String tableData = IOUtils.toStringFromUtf8Stream(response.getBodyStream());
        return tableData;
    }

}
